version: '3.9'

services:
  # MySQL Service
  mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 12042003
      MYSQL_DATABASE: my_database
      MYSQL_USER: root
      MYSQL_PASSWORD: 12042003
    ports:
      - "3306:3306"
    networks:
      - ecommerce-network

  # MongoDB Service
  mongodb:
    image: mongo
    volumes:
      - ./mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - ecommerce-network

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ecommerce-network

  # Kafka Broker
  broker:
    image: confluentinc/cp-server:7.4.3
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      - ecommerce-network

  # Control Center
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.4.3
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
    networks:
      - ecommerce-network

  # Elasticsearch
  elasticsearch:
    build:
      context: ./docker/elasticsearch/
      args:
        ELASTIC_VERSION: "8.5.0"
    container_name: elasticsearch
    volumes:
      - ./docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
    restart: unless-stopped
    networks:
      - ecommerce-network

  # Logstash
  logstash:
    build:
      context: ./docker/logstash/
      args:
        ELASTIC_VERSION: "8.5.0"
    container_name: logstash
    volumes:
      - ./docker/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./docker/logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - "5044:5044"
      - "50000:50000/tcp"
      - "50000:50000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      - ecommerce-network

  # Kibana
  kibana:
    build:
      context: ./docker/kibana/
      args:
        ELASTIC_VERSION: "8.5.0"
    container_name: kibana
    volumes:
      - ./docker/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      - ecommerce-network

  

# Networks
networks:
  ecommerce-network:
    driver: bridge
    name: ecommerce-network
    external: true

# Volumes
volumes:
  elasticsearch:
